@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<CascadingAuthenticationState>
    @if (!NavigationManager.Uri.Contains("/account/login", StringComparison.OrdinalIgnoreCase))
    {
        <div class="app-wrapper">
            <NavMenu isSidebarCollapsed="@isSidebarCollapsed"
                     isSidebarOpen="@isSidebarOpen"
                     currentWidth="@currentWidth"
                     OnCloseSidebar="@CloseSidebar" />

            <div class="main-content @(isSidebarCollapsed ? "collapsed" : "")">
                <TopNav OnToggleSidebar="@ToggleSidebar" />
                <div class="page-content">
                    @Body
                </div>
            </div>
        </div>

        @if (isSidebarOpen && currentWidth < 992)
        {
            <div class="sidebar-overlay" @onclick="CloseSidebar"></div>
        }
    }
    else
    {
        @Body
    }
</CascadingAuthenticationState>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool isSidebarCollapsed = false;
    private bool isSidebarOpen = false;
    private double currentWidth;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("resizeHelper.registerResizeHandler",
                DotNetObjectReference.Create(this));
        }
    }

    [JSInvokable]
    public void OnResize(double width)
    {
        currentWidth = width;
        if (width >= 992)
        {
            isSidebarOpen = false; // Close overlay mode on large screen
        }
        StateHasChanged();
    }

    private void ToggleSidebar()
    {
        if (currentWidth < 992)
        {
            isSidebarOpen = !isSidebarOpen;
        }
        else
        {
            isSidebarCollapsed = !isSidebarCollapsed;
        }
    }

    private void CloseSidebar()
    {
        isSidebarOpen = false;
    }
}
