@page "/events/delete/{eventId:int}"

@using Clubify.Data.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore

@inject Clubify.Data.ApplicationDbContext DbContext
@inject NavigationManager Navigation

@attribute [Authorize(Roles = "Admin")]

<h3 class="mb-4">Delete Event</h3>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/events">Events</a></li>
        <li class="breadcrumb-item active" aria-current="page">Delete</li>
    </ol>
</nav>

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @successMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @errorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (eventToDelete == null)
{
    <p><em>Loading event details...</em></p>
}
else
{
    <div class="card">
        <div class="card-body">
            <h5>Are you sure you want to delete this event?</h5>
            <dl class="row">
                <dt class="col-sm-3">Title:</dt>
                <dd class="col-sm-9">@eventToDelete.Title</dd>

                <dt class="col-sm-3">Description:</dt>
                <dd class="col-sm-9">@eventToDelete.Description</dd>

                <dt class="col-sm-3">Start Date:</dt>
                <dd class="col-sm-9">@eventToDelete.StartDate.ToShortDateString()</dd>

                <dt class="col-sm-3">End Date:</dt>
                <dd class="col-sm-9">@eventToDelete.EndDate.ToShortDateString()</dd>

                <dt class="col-sm-3">Location:</dt>
                <dd class="col-sm-9">@eventToDelete.Location</dd>

                <dt class="col-sm-3">Club:</dt>
                <dd class="col-sm-9">@eventToDelete.Club?.Name</dd>
            </dl>

            <button class="btn btn-danger me-2" @onclick="HandleDelete">Delete</button>
            <a class="btn btn-secondary" href="/events">Cancel</a>
        </div>
    </div>
}

@code {
    [Parameter]
    public int eventId { get; set; }

    private Event eventToDelete;
    private string successMessage;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            eventToDelete = await DbContext.Events
                .Include(e => e.Club)
                .FirstOrDefaultAsync(e => e.Id == eventId);

            if (eventToDelete == null)
            {
                errorMessage = "Event not found.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred while loading event details: {ex.Message}";
        }
    }

    private async Task HandleDelete()
    {
        try
        {
            if (eventToDelete != null)
            {
                DbContext.Events.Remove(eventToDelete);
                await DbContext.SaveChangesAsync();
                successMessage = "Event deleted successfully!";
                await Task.Delay(1000);
                Navigation.NavigateTo("/events");
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred while deleting the event: {ex.Message}";
        }
    }
}