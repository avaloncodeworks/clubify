@page "/dashboard"

@using Clubify.Data
@using Clubify.Data.Models
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Authorization

@inject Clubify.Data.ApplicationDbContext DbContext
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize(Roles = "Admin")]

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @errorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (isLoading)
{
    <div class="text-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <!-- Membership Status Card -->
    <div class="mb-4">
        <MembershipStatusCard Status="@MembershipStatus"
                              ExpiryDate="@MembershipExpiryDate"
                              OnRenew="@RenewMembershipAsync" />
    </div>

    <!-- Summary Stats -->
    <div class="row">
        <div class="col-md-4 mb-3">
            <div class="dashboard-card">
                <h5>Total Clubs</h5>
                <p>@totalClubs</p>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <div class="dashboard-card">
                <h5>Total Events</h5>
                <p>@totalEvents</p>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <div class="dashboard-card">
                <h5>Total Memberships</h5>
                <p>@totalMemberships</p>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="mt-3 d-flex justify-content-center flex-wrap">
        <a class="btn-clubify-outline me-2 mb-2" href="/clubs">
            <i class="bi bi-people-fill"></i>
            Manage Clubs
        </a>
        <a class="btn-clubify-outline me-2 mb-2" href="/events">
            <i class="bi bi-calendar-event-fill"></i>
            Manage Events
        </a>
        <a class="btn-clubify-outline mb-2" href="/clubs/members/1">
            <i class="bi bi-person-lines-fill"></i>
            Manage Memberships
        </a>
    </div>

    <!-- Recent Activity: Events -->
    <div class="table-container mt-4">
        <h5>Recent Events</h5>
        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Start Date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var e in recentEvents)
                {
                    <tr>
                        <td>@e.Title</td>
                        <td>@e.StartDate.ToShortDateString()</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Recent Activity: Memberships -->
    <div class="table-container mt-4">
        <h5>Recent Memberships</h5>
        <table class="table">
            <thead>
                <tr>
                    <th>User</th>
                    <th>Club</th>
                    <th>Joined On</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var m in recentMemberships)
                {
                    <tr>
                        <td>@m.User.Email</td>
                        <td>@m.Club.Name</td>
                        <td>@m.JoinedOn.ToShortDateString()</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private int totalClubs;
    private int totalEvents;
    private int totalMemberships;
    private List<Event> recentEvents;
    private List<Membership> recentMemberships;
    private string errorMessage;
    private bool isLoading = true;

    private string MembershipStatus = "Active";  // Placeholder
    private DateTime MembershipExpiryDate = DateTime.Now.AddMonths(1);  // Placeholder

    protected override async Task OnInitializedAsync()
    {
        try
        {
            totalClubs = await DbContext.Clubs.CountAsync();
            totalEvents = await DbContext.Events.CountAsync();
            totalMemberships = await DbContext.Memberships.CountAsync();

            recentEvents = await DbContext.Events
                .OrderByDescending(e => e.StartDate)
                .Take(5)
                .ToListAsync();

            recentMemberships = await DbContext.Memberships
                .Include(m => m.User)
                .Include(m => m.Club)
                .OrderByDescending(m => m.JoinedOn)
                .Take(5)
                .ToListAsync();

            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = await UserManager.GetUserAsync(authState.User);

            if (user != null)
            {
                var membership = await DbContext.Memberships
                    .Include(m => m.Club)
                    .FirstOrDefaultAsync(m => m.UserId == user.Id);

                if (membership != null)
                {
                    MembershipStatus = membership.IsActive ? "Active" :
                        membership.ExpiryDate <= DateTime.Now ? "Expired" : "Expiring";
                    MembershipExpiryDate = membership.ExpiryDate;
                }
                else
                {
                    MembershipStatus = "No Membership";
                    MembershipExpiryDate = DateTime.Now;
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred while loading dashboard data: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task RenewMembershipAsync()
    {
        // TODO: Implement membership renewal logic
        Console.WriteLine("Renew button clicked!");
    }
}